#version 460
#extension GL_GOOGLE_include_directive : require
layout (local_size_x = 64) in;

layout(std140,set = 0, binding = 0) buffer data {
	vec4 positions[];
};

layout(rgba16f, set = 1, binding = 0) uniform image2D heightMap;


//push constants block
layout( push_constant ) uniform constants
{
	vec4 data1;
	vec4 data2;
	vec4 data3;
	vec4 data4;
} PushConstants;

#include "noise.glsl"

vec4 getHeightData(vec2 p, ivec2 mapCenter) {
	vec2 samplePoint = p+ mapCenter;
	vec2 fractional = fract(samplePoint);

	ivec2 texCoord = ivec2(floor(samplePoint));

	vec4 bl = imageLoad(heightMap, texCoord);
	vec4 tl = imageLoad(heightMap, texCoord+ivec2(0,1));
	vec4 br = imageLoad(heightMap, texCoord+ivec2(1,0));
	vec4 tr = imageLoad(heightMap, texCoord+ivec2(1,1));

	return mix(mix(bl,tl,fractional.y),mix(br,tr,fractional.y),fractional.x);
}

void main()
{
	vec3 playerPosition = PushConstants.data1.xyz;
	float grassCount = PushConstants.data2.x;
	float grassDistance = PushConstants.data2.y;
	float grassDensity = PushConstants.data2.z;

	int grassPerRow = int(grassDistance*2*grassDensity + 1);

	if(gl_GlobalInvocationID.x>=grassCount) return;
	
	float x = (int(gl_GlobalInvocationID.x) % grassPerRow)/grassDensity;
	float z = floor(gl_GlobalInvocationID.x / grassPerRow)/grassDensity;

	float distanceFromCenterSq = ((x-grassDistance)*(x-grassDistance)+(z-grassDistance)*(z-grassDistance))/(grassDistance*grassDistance);

	vec4 offset = vec4(-grassDistance, 0,-grassDistance, 0);

	vec4 position = vec4(x,0,z,0)+offset +vec4(floor(playerPosition.x),0,floor(playerPosition.z),0);

	float distanceToPlayer = distance(position.xyz,vec3(playerPosition.x,0,playerPosition.z));
	//position.y += mix(0,-1,distanceToPlayer/grassDistance) + 0.5*layeredNoise(position.xz,1,1);
    position.xz += vec2(layeredNoise(position.xz,4,1),layeredNoise(position.xz,2,1.5));
	

	vec4 heightData = getHeightData(position.xz,imageSize(heightMap)/2);
	
	position.y += heightData.a;

	if(heightData.y <=0.7) position = vec4(0,-50,0,0);
	if(heightData.w <=0) position = vec4(0,-50,0,0);

	positions[int(gl_GlobalInvocationID.x)] = position;

}
