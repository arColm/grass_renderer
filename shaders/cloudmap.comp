#version 460
#extension GL_GOOGLE_include_directive : require
layout (local_size_x = 16, local_size_y = 1, local_size_z = 16) in;

layout(rgba16f,set = 0, binding = 0) uniform image3D data;

#include "noise.glsl"




void main() {
	ivec3 texelCoord = ivec3(gl_GlobalInvocationID.xyz);
	ivec3 size = imageSize(data);

	
	if(texelCoord.x < size.x && texelCoord.y < size.y && texelCoord.z < size.z)
	{
		vec3 p = vec3(texelCoord);///size;
		//float n = 1-voronoiNoise(p,0.01,0);
		float n = 1-layeredVoronoiNoiseSmooth(p,0.01,0,0.4,2.0,3);
		n = pow(n,5);
		float heightMultiplier = 1-abs(texelCoord.y - size.y*0.5)/(size.y*0.5);
		heightMultiplier = clamp(heightMultiplier*1,0,1);
		imageStore(data,texelCoord,vec4(n*heightMultiplier));
	}
}